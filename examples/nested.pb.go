// Code generated by protoc-gen-go. DO NOT EDIT.
// source: examples/nested.proto

package validator_examples

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/itsmeandevelop/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InnerMessage struct {
	// some_integer can only be in range (1, 100).
	SomeInteger          int32    `protobuf:"varint,1,opt,name=some_integer,json=someInteger,proto3" json:"some_integer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessage) Reset()         { *m = InnerMessage{} }
func (m *InnerMessage) String() string { return proto.CompactTextString(m) }
func (*InnerMessage) ProtoMessage()    {}
func (*InnerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_48ff2d59662eadb1, []int{0}
}

func (m *InnerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessage.Unmarshal(m, b)
}
func (m *InnerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessage.Marshal(b, m, deterministic)
}
func (m *InnerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessage.Merge(m, src)
}
func (m *InnerMessage) XXX_Size() int {
	return xxx_messageInfo_InnerMessage.Size(m)
}
func (m *InnerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessage proto.InternalMessageInfo

func (m *InnerMessage) GetSomeInteger() int32 {
	if m != nil {
		return m.SomeInteger
	}
	return 0
}

type OuterMessage struct {
	// important_string must be a lowercase alpha-numeric of 5 to 30 characters (RE2 syntax).
	ImportantString string `protobuf:"bytes,1,opt,name=important_string,json=importantString,proto3" json:"important_string,omitempty"`
	// proto3 doesn't have `required`, the `msg_exist` enforces presence of InnerMessage.
	Inner                *InnerMessage `protobuf:"bytes,2,opt,name=inner,proto3" json:"inner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OuterMessage) Reset()         { *m = OuterMessage{} }
func (m *OuterMessage) String() string { return proto.CompactTextString(m) }
func (*OuterMessage) ProtoMessage()    {}
func (*OuterMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_48ff2d59662eadb1, []int{1}
}

func (m *OuterMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterMessage.Unmarshal(m, b)
}
func (m *OuterMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterMessage.Marshal(b, m, deterministic)
}
func (m *OuterMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterMessage.Merge(m, src)
}
func (m *OuterMessage) XXX_Size() int {
	return xxx_messageInfo_OuterMessage.Size(m)
}
func (m *OuterMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OuterMessage proto.InternalMessageInfo

func (m *OuterMessage) GetImportantString() string {
	if m != nil {
		return m.ImportantString
	}
	return ""
}

func (m *OuterMessage) GetInner() *InnerMessage {
	if m != nil {
		return m.Inner
	}
	return nil
}

func init() {
	proto.RegisterType((*InnerMessage)(nil), "validator.examples.InnerMessage")
	proto.RegisterType((*OuterMessage)(nil), "validator.examples.OuterMessage")
}

func init() { proto.RegisterFile("examples/nested.proto", fileDescriptor_48ff2d59662eadb1) }

var fileDescriptor_48ff2d59662eadb1 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0xcd, 0x70, 0x43, 0xb3, 0xa2, 0x23, 0x20, 0x14, 0x2f, 0x2d, 0xc3, 0xc3, 0x40, 0x9b,
	0xc2, 0xc4, 0x93, 0xcc, 0x43, 0x6f, 0x3b, 0x88, 0x50, 0x8f, 0xa2, 0x23, 0xb3, 0x7f, 0x62, 0xa0,
	0x49, 0x4a, 0xf2, 0xdf, 0x10, 0xc5, 0x8f, 0xe0, 0x67, 0x2c, 0xf4, 0x93, 0xc8, 0x32, 0xdc, 0x04,
	0xcf, 0xef, 0xf7, 0x7b, 0xbc, 0x47, 0xcf, 0xe0, 0x5d, 0xe8, 0xa6, 0x06, 0x9f, 0x1b, 0xf0, 0x08,
	0x15, 0x6f, 0x9c, 0x45, 0xcb, 0xd8, 0x5a, 0xd4, 0xaa, 0x12, 0x68, 0x1d, 0xff, 0x05, 0xce, 0x67,
	0x52, 0xe1, 0xdb, 0x6a, 0xc9, 0x5f, 0xad, 0xce, 0x15, 0x7a, 0x0d, 0xc2, 0x54, 0xb0, 0x86, 0xda,
	0x36, 0xb9, 0xb4, 0x59, 0xf0, 0xb2, 0x9d, 0xe6, 0xf3, 0x7d, 0x43, 0x88, 0xc6, 0xb7, 0x34, 0x9a,
	0x1b, 0x03, 0xee, 0x1e, 0xbc, 0x17, 0x12, 0xd8, 0x25, 0x8d, 0xbc, 0xd5, 0xb0, 0x50, 0x06, 0x41,
	0x82, 0x8b, 0x49, 0x4a, 0x26, 0xfd, 0xe2, 0xa8, 0x6b, 0x93, 0xc3, 0xd1, 0x41, 0x5c, 0x95, 0xc3,
	0x4d, 0x3a, 0xdf, 0x86, 0xe3, 0x6f, 0x42, 0xa3, 0x87, 0x15, 0xee, 0xed, 0x19, 0x1d, 0x29, 0xdd,
	0x58, 0x87, 0xc2, 0xe0, 0xc2, 0xa3, 0x53, 0x46, 0x86, 0x86, 0xe3, 0x82, 0x75, 0x6d, 0x72, 0x42,
	0xa3, 0x97, 0x27, 0x91, 0x7d, 0x3c, 0x7f, 0x4e, 0xaf, 0x6e, 0xbe, 0x2e, 0xca, 0xd3, 0x1d, 0xfb,
	0x18, 0x50, 0x76, 0x47, 0xfb, 0x6a, 0x33, 0x26, 0xee, 0xa5, 0x64, 0x32, 0x9c, 0xa6, 0xfc, 0xff,
	0x5f, 0xfe, 0x77, 0x6d, 0x31, 0xe8, 0xda, 0xa4, 0x97, 0x92, 0x72, 0xab, 0x2d, 0x07, 0xe1, 0xd3,
	0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x24, 0x17, 0xe0, 0xc4, 0x3f, 0x01, 0x00, 0x00,
}
